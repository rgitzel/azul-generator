---
AWSTemplateFormatVersion: 2010-09-09

#
# ** generated by 'simple-infrastructure' **
#
# see https://apimeister.com/2017/09/13/integrate-api-gateway-with-sns-using-cloudformation.html
#

Description: an API Gateway proxy in front of the azul-generator SNS topic

Parameters:
  Environment:
    Description: The label given to the environment
    Type: String


Resources:

  AzulGeneratorLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: !Sub |
          // a simple function that echoes the request
          exports.handler = function(event, context, callback) {
              var response = {
                  "statusCode": 200,
                  "body": JSON.stringify(event)
              };
              callback(null, response);
          };
      Description: a small app to generate random boards for the game Azul
      Handler: "index.handler"
      Runtime: "nodejs6.10"
      Role:
        !GetAtt AzulGeneratorIamRole.Arn

  AzulGeneratorIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path:
        !Sub "/AzulGenerator/"
      Policies:
        - PolicyName: allow-logging
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

  AzulGeneratorLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        !GetAtt AzulGeneratorLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${AzulGeneratorRestApi}/*"

  AzulGeneratorRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name:
        !Sub ${Environment}--azul-generator--AzulGenerator-http-lambda-endpoints
      Description: HTTP endpoints for the 'AzulGenerator' lambda
      FailOnWarnings: true

  AzulGeneratorResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        !Ref AzulGeneratorRestApi
      ParentId:
        !GetAtt AzulGeneratorRestApi.RootResourceId
      PathPart: board

  AzulGeneratorMethod:
    Type: AWS::ApiGateway::Method
    DependsOn: AzulGeneratorLambdaInvokePermission
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Join:
            - ""
            - - "arn:aws:apigateway:"
              - !Sub ${AWS::Region}
              - ":lambda:path/2015-03-31/functions/"
              - !GetAtt AzulGeneratorLambdaFunction.Arn
              - "/invocations"
      ResourceId:
        !Ref AzulGeneratorResource
      RestApiId:
        !Ref AzulGeneratorRestApi

  AzulGeneratorDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - AzulGeneratorMethod
    Properties:
      RestApiId:
        !Ref AzulGeneratorRestApi
      StageName:
        AzulGenerator


Outputs:
  AzulGeneratorLambdaUrl:
    Description: The lambda's endpoint
    Value:
      !Sub "https://${AzulGeneratorRestApi}.execute-api.${AWS::Region}.amazonaws.com/AzulGenerator/board"
    Export:
      Name:
        !Sub ${Environment}--azul-generator--AzulGenerator-lambda--url

